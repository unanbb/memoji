name: Quality Checks

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - run: npm ci

      - name: Type Check
        id: type-check
        run: npm run type-check
        continue-on-error: true

      - name: Lint
        id: lint
        run: npm run lint
        continue-on-error: true

      - name: Security Audit
        id: audit
        run: npm audit --audit-level=high
        continue-on-error: true

      - name: Report errors
        if: ${{ steps.type-check.outcome == 'failure' || steps.lint.outcome == 'failure' || steps.audit.outcome == 'failure' }}
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const typeCheckOutcome = '${{ steps.type-check.outcome }}';
            const lintOutcome = '${{ steps.lint.outcome }}';
            const auditOutcome = '${{ steps.audit.outcome }}';

            const commitSHA = context.payload.pull_request ? context.payload.pull_request.head.sha : context.sha;
            const commitURL = `${context.payload.repository.html_url}/commit/${commitSHA}`;

            let errorMessage = `## 품질 검사 - [${commitSHA.substring(0, 7)}](${commitURL})\n\n`;

            if (typeCheckOutcome === 'failure') {
              errorMessage += '## 타입 체크 오류\n타입 체크 중 오류가 발생했습니다. 자세한 내용은 로그를 확인해주세요.\n\n';
            }

            if (lintOutcome === 'failure') {
              errorMessage += '## 린트 오류\nESLint 검사 중 오류가 발생했습니다. 자세한 내용은 로그를 확인해주세요.\n\n';
            }

            if (auditOutcome === 'failure') {
              errorMessage += '## 보안 감사 오류\n보안 취약점이 발견되었습니다. 자세한 내용은 로그를 확인해주세요.\n\n';
            }

            if (typeCheckOutcome !== 'failure' && lintOutcome !== 'failure' && auditOutcome !== 'failure') {
              errorMessage += '## 성공\n모든 품질 검사가 성공했습니다.';
            } 
              
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: errorMessage
            });

            core.setFailed('Quality checks failed');
